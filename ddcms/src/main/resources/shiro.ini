#定义拦截器
[filters]
myFilter=com.daimengshi.ddcms.pub.shiro.filter.PermissionsAuthorizationFilter

#定义拦截的URL
[urls]
/admin/login/* = anon
/admin/*=myFilter[admin]

[main]
#自定义realm
userRealm = com.daimengshi.ddcms.pub.shiro.realm.UserRealm

credentialsMatcher=com.daimengshi.ddcms.pub.shiro.credentials.RetryLimitHashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName=md5
credentialsMatcher.hashIterations=2
credentialsMatcher.storedCredentialsHexEncoded=true
userRealm.credentialsMatcher=$credentialsMatcher

##########################################缓存配置说明####################################################
###userRealm.cachingEnabled：启用缓存，默认false；
###userRealm.authenticationCachingEnabled：启用身份验证缓存，即缓存AuthenticationInfo信息，默认false；
###userRealm.authenticationCacheName：缓存AuthenticationInfo信息的缓存名称；
###userRealm. authorizationCachingEnabled：启用授权缓存，即缓存AuthorizationInfo信息，默认false；
###userRealm. authorizationCacheName：缓存AuthorizationInfo信息的缓存名称；
###cacheManager：缓存管理器，此处使用EhCacheManager，即Ehcache实现，需要导入相应的Ehcache依赖，请参考pom.xml；
########################################## 配置缓存 ######################################################
userRealm.cachingEnabled=true
userRealm.authenticationCachingEnabled=true
userRealm.authenticationCacheName=authenticationCache
userRealm.authorizationCachingEnabled=true
userRealm.authorizationCacheName=authorizationCache
#########################################################################################################

#将realm设置到securityManager，相当于Spring中的注入
securityManager.realms = $userRealm

#缓存管理器，此处使用EhCacheManager，即Ehcache实现，需要导入相应的Ehcache依赖，请参考pom.xml
cacheManager=org.apache.shiro.cache.ehcache.EhCacheManager
cacheManager.cacheManagerConfigFile=classpath:shiro-ehcache.xml
securityManager.cacheManager=$cacheManager


